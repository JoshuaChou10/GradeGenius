html, body {
    padding-top: 70px;
    height: 100%;
    margin: 0;
    background: #56CCF2; 
    font-family: Arial, sans-serif;
   
}

header, footer {
    background-color: #2c3e50;
    color: white;
    text-align: center;
    flex-shrink: 0; /* Prevents header and footer from shrinking */
}

footer {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    width: 100%;
}

header a, footer a {
    color: #3498db;
}


header {
    background-color: #2c3e50;
    color: white;
    text-align: center;

    flex-shrink: 0; /* Prevents header and footer from shrinking */
    position: fixed; /* Fixed positioning */
    top: 0; /* Align to top of the viewport */
    left: 0; /* Align to left of the viewport */
    right: 0; /* Align to right of the viewport */
    z-index: 1000; /* Ensures the header is above other content */
}

.hamburger {
    display: block;
    cursor: pointer;
    margin-right: 10px;
}

/* Sidebar */
.sidebar {
    width: 250px; 
    height: 100vh; /* Viewport Height */
    background-color: #fff; /* White background */
    border-right: 1px solid #ececec; /* Right border */
    padding-top: 20px;
    padding-left: 0;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05); /* subtle shadow */
    position: fixed; /* Fixed position */
    overflow-y: auto; /* Enable scroll if content is longer than the screen */
    border-top-right-radius: 8px; /* Rounded corners on the top right */
    border-bottom-right-radius: 8px; /* Rounded corners on the bottom right */
    top: 120px;
    left: -250px; /* Initially hide the sidebar */
}

.header-content {
    display: flex; /* Use flexbox to align items in a row */
    align-items: center; /* Center items vertically */
    justify-content: start; /* Align items to the start of the container */
    padding: 0 20px; /* Add some padding on the sides */
}
.content {
    transition: margin-left 0.3s; /* Smooth transition for the margin */
    margin-left: 100px;; /* Set the initial margin to 0 */
}

.sidebar.visible {
    left: 0; /* Bring the sidebar into view */
}
.content-shift {
    margin-left: 250px;
}
.sidebar ul {
    list-style-type: none;
    padding-left: 0; /* Remove default padding */
    margin-top: 0; /* Align to the top */
}

.sidebar li {
    padding: 10px 20px;
    text-align: left;
}

.sidebar li.active,
.sidebar li:hover {
    background-color: #f6f7f8; /* Light grey background */
    border-radius: 0 30px 30px 0; /* Rounded corners on the right */
    box-shadow: inset 5px 0 10px -5px rgba(0, 0, 0, 0.1); /* Inner shadow on the right */
}

.sidebar a {
    text-decoration: none;
    color: #3c4043; /* Dark grey text color for contrast */
    font-weight: 500; /* Slightly bolder font */
    font-size:1.1rem;
    display: block;
    padding:10px;
}

.sidebar .courses-heading {
    color: #5f6368; /* Darker grey text */
    padding: 15px 20px;
    font-weight: bold;
    text-transform: uppercase;
    font-size: 0.85em; /* Smaller font size */
}
hr {
    border: 0;
    height: 1px;
    background-image: linear-gradient(to right, rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.1));
    margin-top: 20px;
    margin-bottom: 20px;
}
/* Main Content */
main {
    flex: 1;
    width: 80%;
    margin-top: 70px;
    margin: 2rem auto;
    margin-left: 250px;
    background-color: #fff;
    padding: 2rem;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
    border-radius:20px;
}
/* Flash message styles */
.flash-message {
    padding: 10px;
    margin: 10px 0;
    border: 1px solid transparent;
    border-radius: 4px;
    text-align: center;
}

.flash-success {
    color: #155724;
    background-color: #d4edda;
    border-color: #c3e6cb;
}

.flash-info {
    color: #0c5460;
    background-color: #d1ecf1;
    border-color: #bee5eb;
}

.flash-warning {
    color: #856404;
    background-color: #fff3cd;
    border-color: #ffeeba;
}

.flash-danger {
    color: #721c24;
    background-color: #f8d7da;
    border-color: #f5c6cb;
}
.btn-login, .btn-logout {
    padding: 5px 10px;
    text-decoration: none;
    color: white;
    background-color: #3498db;
    border: none;
    border-radius: 4px;
    margin-left: 10px;
    cursor: pointer;
}

.btn-logout {
    background-color: #e74c3c;
}
.modal {
    
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 1; /* Sit on top */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; 
    background-color: rgb(0,0,0); /* Fallback color */
    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}

.modal-content {
    position: relative; /* This makes sure that the absolute positioning of .close is relative to this container */
    background-color: #fefefe;
    margin: 15% auto;
    padding: 20px;
    border: 1px solid #888;
    width: 30%;
    max-width: 400px;
    min-height: 300px;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: center;
    border-radius: 10px;
    overflow: auto;
}

.close {
    color: #aaa;
    position: absolute;
    top: 0; /* Adjusted to align with the top edge of modal-content */
    right: 0; /* Adjusted to align with the right edge of modal-content */
    padding: 20px; /* Add padding to give space inside the modal-content */
    font-size: 24px;
    cursor: pointer;
}

/* It is good practice to add a z-index value higher than the modal-content to ensure it is clickable */
.close {
    z-index: 2;
}

/* Additional styling for form elements */
input[type=text], input[type=password] {
    width: calc(100% - 10px); 
    margin: 8px 0;
  
    padding: 12px 20px;
    display: inline-block;
    border: 1px solid #ccc;
    box-sizing: border-box;
}

input[type=submit] {
    width: calc(100% - 10px); 
    margin: 8px 0;
    background-color: #4CAF50;
    color: white;
    padding: 14px 20px;
    margin: 8px 0;
    border: none;
    cursor: pointer;
   
}

input[type=submit]:hover {
    opacity: 0.8;
}

/* Style for the form labels */
label {
    margin-top:20px;
    width: 100%; /* Full width */
    text-align: left; 
    display: block; /* Make labels block level for better layout */
    margin-bottom: 5px;
}

/* Adjusting the margins and layout of the sign-up message */
.modal-content p {
  
    text-align: center;
    margin-top: 20px;
}

 
  .btn {
    padding: 5px 10px;
    color: #007BFF;
    background-color: transparent;
    border: 1px solid #007BFF;
    border-radius: 3px;
    text-decoration: none;
    font-size: 0.8em;
    display: inline-block; /* Ensures the button does not stretch to fill its container */
    margin-bottom: 10px; /* Provides some space between the button and the table */
    transition: background-color 0.3s, color 0.3s;
}

.btn:hover {
    background-color: #0056b3;
    color: #fff;
}
.dropdown-content {
    display: none; 
    right: 0; 
    top: 100px; 
    background-color: #f9f9f9; 
    min-width: 160px; 
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2); 
    z-index: 1;
}

.dropdown-item {
    padding: 12px 16px;
    text-decoration: none;
    display: block;
    text-align: left;
    border: none;
    background: none;
    width: 100%;

    box-sizing: border-box;
}
.dropdown-item:hover {
   
    background-color: #f1f1f1;
    box-sizing: border-box;
}
#profile-dropdown {
    position: absolute;
    top: 70px; /* Adjust this value to position the dropdown below the profile picture */
    left: 0;
    right: 70px;

text-align: left;
}
#user-info {
    position: relative; /* Keep this as it is */
    right: 20px;
    top: 20px;
}

#profile-dropdown {
    position: absolute;
    top: 100%; /* Aligns the top of the dropdown with the bottom of the profile image */
    left: 50%; /* Starts the dropdown in the center of the profile image */
    transform: translateX(-60%); /* Centers the dropdown with respect to the profile image */
    width: auto; /* Adjust the width as needed, or use max-width to prevent it from going off-screen */
    min-width: 100px; /* Minimum width can be set as per content */

}

/* Optional: Adjust for smaller screens */
@media (max-width: 767px) {
    #user-info {
        right: 10px; /* Adjust position for smaller screens */
        top: 10px;
    }

    #profile-dropdown {
        /* Adjust styles for smaller screens */
    }
}

.goal-status {
    margin: 10px 0;
    padding: 10px;
    border-radius: 5px;
    color: #333;
    background-color: #f7f7f7;
    border: 1px solid #ddd;
    text-align: center;
}
.goal-reached,
.goal-close {
    color: #4CAF50;
    border-color: #c8e6c9;
}
.goal-exceeded {
    color: #2196F3;
    border-color: #bbdefb;
}
.goal-pending {
    color: #FFC107;
    border-color: #ffecb3;
}
.goal-none {
    color: #9E9E9E;
    border-color: #e0e0e0;
}
/* Container holding the label and custom checkbox */
.autoupdate-container {
    display: flex;
    align-items: center; /* Center items vertically */
    gap: 10px; /* Space between label and custom checkbox */
  }
  
  /* Style for the custom checkbox */
  .checkbox-custom {
    position: relative;
    height: 20px;
    width: 20px;
    background-color: #eee; /* Default background */
    border-radius: 50%; /* Rounded corners */
    display: inline-block;
    cursor: pointer;
  }
  
  /* Hide the actual checkbox input */
  .autoupdate-container input[type="checkbox"] {
    opacity: 0;
    position: absolute;
    cursor: pointer;
  }
  
  /* When the checkbox is checked, show the custom indicator */
  .autoupdate-container input[type="checkbox"]:checked + .checkbox-custom {
    background-color: #007bff; /* Checked background color */
    border: 2px solid #007bff; 
  }
  
  /* Create the checkmark/indicator inside the custom checkbox */
  .checkbox-custom::after {
    content: '';
    position: absolute;
    display: none;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background: white;
  }
  
  /* Display the checkmark when the checkbox is checked */
  .autoupdate-container input[type="checkbox"]:checked + .checkbox-custom::after {
    display: block;
  }
  
  /* Style the label */
  .autoupdate-label {
    cursor: pointer;
  }
  span.format-hint {
   
  
    background-color: #f2f2f2;
    color: #333;
    font-size: 1rem;
    font-weight: bold;
    padding: 8px;
    border: 1px solid #ddd;
    border-radius: 4px;
    margin-bottom: 10px;
    text-align: center;
}
.format-hint{
    position: relative;
    display: inline-block;
    
}
span.question-mark {
    display: inline-block;
    margin-left: 5px;
    color: #007bff;
    font-weight: bold;
    cursor: help;
    font-size: 1rem;
}

/* Tooltip styling (if not using the title attribute) */
span.question-mark:hover::after {
    content: attr(title);
    position: absolute;
    top: -5px;
    right: -150%;
    background-color: black;
    color: white;
    padding: 5px 10px;
    border-radius: 5px;
    font-size: 0.8rem;
    white-space: nowrap;
}
span.tooltip-icon {
    position: absolute;
    top: -10px; 
    right: -10px; 
    width: 20px; /* Size of the circle */
    height: 20px; /* Size of the circle */
    line-height: 20px; /* Center the question mark vertically */
    background-color: #007bff;
    color: white;
    font-size: 0.8rem;
    font-weight: bold;
    text-align: center;
    border-radius: 50%;
    cursor: help;
}

/* Tooltip styling */
span.tooltip-icon::after {
    content: attr(title);
    position: absolute;
    top: -35px; /* Position above the icon */
    right: 0;
    background-color: black;
    color: white;
    padding: 5px 10px;
    border-radius: 5px;
    font-size: 0.8rem;
    white-space: nowrap;
    opacity: 0;
    transition: opacity 0.3s;
    visibility: hidden;
}

span.tooltip-icon:hover::after {
    opacity: 1;
    visibility: visible;
}